<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.drones4hire.dronesapp.dbaccess.dao.mysql.ProjectMapper">

	<insert id="createProject" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
          INSERT
          		INTO drones.PROJECTS (TITLE, SUMMARY, CLIENT_ID, PILOT_ID, SERVICE_ID, DURATION_ID, LOCATION_ID, BUDGET_ID, POST_PRODUCTION_REQUIRED, STATUS, START_DATE, FINISH_DATE)
          VALUES 
	           (
	            #{title},
	            #{summary},
	            #{clientId},
	            #{pilotId},
	            #{service.id},
	            #{duration.id},
	            #{location.id},
	            #{budget.id},
	            #{postProductionRequired},
	            #{status},
	            #{startDate},
	            #{finishDate}
	           )
        ]]>
	</insert>
	
	<insert id="createProjectPaidOption" useGeneratedKeys="true">
		<![CDATA[
        	INSERT
          		INTO drones.PROJECTS_PAID_OPTIONS (PROJECT_ID, PAID_OPTION_ID)
          VALUES
        ]]>
		<foreach collection="paidOptions" item="paidOption" index="index" open="" separator="," close=";">
			(
				#{projectId},
				#{paidOption.id}
			)
		</foreach>
	</insert>


	<sql id="getProject">
        <![CDATA[
          SELECT
	      		P.ID AS PROJECT_ID,
	      		P.TITLE AS PROJECT_TITLE,
	        	P.SUMMARY AS PROJECT_SUMMARY,
	        	P.CLIENT_ID AS PROJECT_CLIENT_ID,
	        	P.PILOT_ID AS PROJECT_PILOT_ID,
	        	P.POST_PRODUCTION_REQUIRED AS PROJECT_POST_PRODUCTION_REQUIRED,
	        	P.STATUS AS PROJECT_STATUS,
	        	P.START_DATE AS PROJECT_START_DATE,
	        	P.FINISH_DATE AS PROJECT_FINISH_DATE,
	        	P.CREATED_AT AS PROJECT_CREATED_AT,
	        	P.MODIFIED_AT AS PROJECT_MODIFIED_AT,
	        	
	        	PO.ID AS PAID_OPTION_ID,
		        PO.TITLE AS PAID_OPTION_TITLE,
		        PO.DESCRIPTION AS PAID_OPTION_DESCRIPTION,
		        PO.PRICE AS PAID_OPTION_PRICE,
		        PO.CURRENCY AS PAID_OPTION_CURRENCY,
		        PO.MODIFIED_AT AS PAID_OPTION_MODIFIED_AT,
		        PO.CREATED_AT AS PAID_OPTION_CREATED_AT,
		        
		        L.ID AS LOCATION_ID,
		        X(L.COORDINATES) AS LOCATION_X_COORDINATE,
		        Y(L.COORDINATES) AS LOCATION_Y_COORDINATE,
		        L.CITY AS LOCATION_CITY,
		        L.POSTCODE AS LOCATION_POSTCODE,
		        L.MODIFIED_AT AS LOCATION_MODIFIED_AT,
		        L.CREATED_AT AS LOCATION_CREATED_AT,
		        C.ID AS COUNTRY_ID,
		        C.NAME AS COUNTRY_NAME,
		        C.MODIFIED_AT AS COUNTRY_MODIFIED_AT,
		        C.CREATED_AT AS COUNTRY_CREATED_AT,
		        ST.ID AS STATE_ID,
		        ST.NAME AS STATE_NAME,
		        ST.MODIFIED_AT AS STATE_MODIFIED_AT,
		        ST.CREATED_AT AS STATE_CREATED_AT,
		        
		        D.ID AS DURATION_ID,
		        D.TITLE AS DURATION_TITLE,
		        D.MIN AS DURATION_MIN,
		        D.MAX AS DURATION_MAX,
		        D.SORT_ORDER AS DURATION_SORT_ORDER,
		        D.MODIFIED_AT AS DURATION_MODIFIED_AT,
		        D.CREATED_AT AS DURATION_CREATED_AT,
		        
		        B.ID AS BUDGET_ID,
		        B.TITLE AS BUDGET_TITLE,
		        B.MIN AS BUDGET_MIN,
		        B.MAX AS BUDGET_MAX,
		        B.CURRENCY AS BUDGET_CURRENCY,
		        B.SORT_ORDER AS BUDGET_SORT_ORDER,
		        B.MODIFIED_AT AS BUDGET_MODIFIED_AT,
		        B.CREATED_AT AS BUDGET_CREATED_AT,
		        
		        S.ID AS SERVICE_ID,
	            S.NAME AS SERVICE_NAME,
	            S.MODIFIED_AT AS SERVICE_MODIFIED_AT,
	            S.CREATED_AT AS SERVICE_CREATED_AT,
	            SC.ID AS SERVICE_CATEGORY_ID,
	            SC.NAME AS SERVICE_CATEGORY_NAME,
	            SC.SORT_ORDER AS SERVICE_CATEGORY_SORT_ORDER,
	            SC.MODIFIED_AT AS SERVICE_CATEGORY_MODIFIED_AT,
	            SC.CREATED_AT AS SERVICE_CATEGORY_CREATED_AT,
	            
	            A.ID AS ATTACHMENT_ID,
	      		A.ATTACHMENT_URL AS ATTACHMENT_ATTACHMENT_URL,
		        A.TYPE AS ATTACHMENT_TYPE,
		        A.PROJECT_ID AS ATTACHMENT_PROJECT_ID,
		        A.MODIFIED_AT AS ATTACHMENT_MODIFIED_AT,
		        A.CREATED_AT AS ATTACHMENT_CREATED_AT
          FROM
	      		drones.PROJECTS P
	      LEFT JOIN
	      		drones.PROJECTS_PAID_OPTIONS PPO		
	      ON
          		P.ID = PPO.PROJECT_ID		
	      LEFT JOIN
	      		drones.PAID_OPTIONS PO
	      ON
          		PPO.PAID_OPTION_ID = PO.ID
          LEFT JOIN
	      		drones.LOCATIONS L		
	      ON
          		P.LOCATION_ID = L.ID
          LEFT JOIN
            	drones.COUNTRIES C
          ON
            L.COUNTRY_ID = C.ID
          LEFT JOIN
            	drones.STATES ST
          ON
            L.STATE_ID = ST.ID
          LEFT JOIN
	      		drones.BUDGETS B		
	      ON
          		P.BUDGET_ID = B.ID
          		
          LEFT JOIN
	      		drones.DURATIONS D	
	      ON
          		P.DURATION_ID = D.ID
          		
          LEFT JOIN
	      		drones.SERVICES S	
	      ON
          		P.SERVICE_ID = S.ID
          LEFT JOIN
	      		drones.SERVICE_CATEGORIES SC
	      ON
          		S.SERVICE_CATEGORY_ID = SC.ID	
          LEFT JOIN
	      		 drones.ATTACHMENTS A
	      ON
          		A.PROJECT_ID = P.ID		
        ]]>
	</sql>

	<select id="getProjectById" resultMap="ProjectResultMap">
		<include refid="getProject" />
        <![CDATA[
          WHERE
          		P.ID = #{id}
        ]]>
	</select>

	<select id="getAllProjects" resultMap="ProjectResultMap">
		<include refid="getProject" />
	</select>

	<select id="searchProjects" resultMap="ProjectResultMap">
		<include refid="getProject" />
		<![CDATA[
			INNER JOIN
			(
				SELECT
					P.ID
				FROM
					drones.PROJECTS P
				LEFT JOIN
	      			drones.LOCATIONS L
	      		ON
          			P.LOCATION_ID = L.ID
          		LEFT JOIN
	      			drones.BUDGETS B
	      		ON
          			P.BUDGET_ID = B.ID

          		LEFT JOIN
	      			drones.DURATIONS D
	      		ON
          			P.DURATION_ID = D.ID

          		LEFT JOIN
	      			drones.SERVICES S
	      		ON
          			P.SERVICE_ID = S.ID
          		LEFT JOIN
	      			drones.SERVICE_CATEGORIES SC
	      		ON
          			S.SERVICE_CATEGORY_ID = SC.ID
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="null != title">
				<![CDATA[
				   AND LOWER(P.TITLE) LIKE LOWER(CONCAT('%', #{title}, '%'))
				]]>
			</if>
			<if test="null != status">
				<![CDATA[
				   AND P.STATUS = #{status}
				]]>
			</if>
			<if test="0 != serviceCategoryId">
				<![CDATA[
				   AND SC.ID = #{serviceCategoryId}
				]]>
			</if>
			<if test="0 != durationId">
				<![CDATA[
				   AND D.ID = #{durationId}
				]]>
			</if>
			<if test="0 != locationId">
				<![CDATA[
				   AND L.ID = #{locationId}
				]]>
			</if>
			<if test="0 != budgetId">
				<![CDATA[
				   AND B.ID = #{budgetId}
				]]>
			</if>
			<if test="0 != clientId">
				<![CDATA[
				   AND P.CLIENT_ID = #{clientId}
				]]>
			</if>
			<if test="0 != pilotId and 'NEW' != status.toString()">
				<![CDATA[
				   AND P.PILOT_ID = #{pilotId}
				]]>
			</if>
		</trim>
		<if test="sortOrder.toString() == 'ASC'">
			<![CDATA[
				ORDER BY P.CREATED_AT ASC
			]]>
		</if>
		<if test="sortOrder.toString() == 'DESC'">
			<![CDATA[
				ORDER BY P.CREATED_AT DESC
			]]>
		</if>
		<![CDATA[
				LIMIT #{pageSize} OFFSET #{page}
			)
			AS PID
			ON
				P.ID = PID.ID
		]]>
	</select>

	<select id="getProjectsSearchCount" resultType="java.lang.Integer">
		<![CDATA[
			SELECT
				COUNT(*)
			FROM
				drones.PROJECTS P
			LEFT JOIN
				drones.LOCATIONS L
			ON
				P.LOCATION_ID = L.ID
			LEFT JOIN
				drones.BUDGETS B
			ON
				P.BUDGET_ID = B.ID

			LEFT JOIN
				drones.DURATIONS D
			ON
				P.DURATION_ID = D.ID

			LEFT JOIN
				drones.SERVICES S
			ON
				P.SERVICE_ID = S.ID
			LEFT JOIN
				drones.SERVICE_CATEGORIES SC
			ON
				S.SERVICE_CATEGORY_ID = SC.ID
		]]>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="null != title">
				<![CDATA[
				   AND LOWER(P.TITLE) LIKE LOWER(CONCAT('%', #{title}, '%'))
				]]>
			</if>
			<if test="null != status">
				<![CDATA[
				   AND P.STATUS = #{status}
				]]>
			</if>
			<if test="0 != serviceCategoryId">
				<![CDATA[
				   AND SC.ID = #{serviceCategoryId}
				]]>
			</if>
			<if test="0 != durationId">
				<![CDATA[
				   AND D.ID = #{durationId}
				]]>
			</if>
			<if test="0 != locationId">
				<![CDATA[
				   AND L.ID = #{locationId}
				]]>
			</if>
			<if test="0 != budgetId">
				<![CDATA[
				   AND B.ID = #{budgetId}
				]]>
			</if>
			<if test="0 != clientId">
				<![CDATA[
				   AND P.CLIENT_ID = #{clientId}
				]]>
			</if>
			<if test="0 != pilotId and 'NEW' != status.toString()">
				<![CDATA[
				   AND P.PILOT_ID = #{pilotId}
				]]>
			</if>
		</trim>
	</select>

	<update id="updateProject">
        <![CDATA[
          UPDATE
          		drones.PROJECTS
          SET
          		TITLE = #{title},
          	 	SUMMARY = #{summary},
          	 	CLIENT_ID = #{clientId},
          	 	PILOT_ID = #{pilotId},
          	 	POST_PRODUCTION_REQUIRED = #{postProductionRequired},
          	 	STATUS = #{status},
          	 	START_DATE = #{startDate},
          	 	FINISH_DATE = #{finishDate}
          WHERE
			 	ID = #{id}
        ]]>
	</update>

	<delete id="deleteProject">
        <![CDATA[
          DELETE
          		FROM drones.PROJECTS
          WHERE
          		ID = #{id}
        ]]>
	</delete>


	<resultMap id="ProjectResultMap" type="com.drones4hire.dronesapp.models.db.projects.Project" autoMapping="false">
		<id column="PROJECT_ID" property="id" />
		<result column="PROJECT_TITLE" property="title" />
		<result column="PROJECT_SUMMARY" property="summary" />
		<result column="PROJECT_CLIENT_ID" property="clientId" />
		<result column="PROJECT_PILOT_ID" property="pilotId" />
		<result column="PROJECT_POST_PRODUCTION_REQUIRED" property="postProductionRequired" />
		<result column="PROJECT_STATUS" property="status" />
		<result column="PROJECT_START_DATE" property="startDate" />
		<result column="PROJECT_FINISH_DATE" property="finishDate" />
		<result column="PROJECT_MODIFIED_AT" property="modifiedAt" />
		<result column="PROJECT_CREATED_AT" property="createdAt" />
		<association property="service" resultMap="com.drones4hire.dronesapp.dbaccess.dao.mysql.ServiceMapper.ServiceResultMap"/>
		<association property="location" resultMap="com.drones4hire.dronesapp.dbaccess.dao.mysql.LocationMapper.LocationResultMap"/>
		<association property="duration" resultMap="com.drones4hire.dronesapp.dbaccess.dao.mysql.DurationMapper.DurationResultMap"/>
		<association property="budget" resultMap="com.drones4hire.dronesapp.dbaccess.dao.mysql.BudgetMapper.BudgetResultMap"/>
		<collection property="paidOptions"
			ofType="com.drones4hire.dronesapp.models.db.projects.PaidOption"
			resultMap="com.drones4hire.dronesapp.dbaccess.dao.mysql.PaidOptionMapper.PaidOptionResultMap" />
		<collection property="attachments"
			ofType="com.drones4hire.dronesapp.models.db.projects.Attachment"
			resultMap="com.drones4hire.dronesapp.dbaccess.dao.mysql.AttachmentMapper.AttachmentResultMap" />
	</resultMap>

</mapper>